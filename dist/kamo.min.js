(function(global){var kamo={};kamo.Stream=function(){var Constructor=function(){this.subscriptions=[]};Constructor.fromEventHandlerSetter=function(object,propertyName){var stream=new Constructor;object[propertyName]=function(event){stream.publish(event)};return stream};Constructor.fromEventHandlerFunction=function(object,functionName){var args=Array.prototype.slice.call(arguments,2);var stream=new Constructor;args.unshift(function(event){stream.publish(event)});object[functionName].apply(object,args);return stream};Constructor.prototype.publish=function(message){for(var i=0,length=this.subscriptions.length;i<length;i++){this.subscriptions[i](message)}return this};Constructor.prototype.subscribe=function(subscription){this.subscriptions.push(subscription);return this};Constructor.prototype.merge=function(anotherStream){var mergedStream=new Constructor;this.subscribe(function(message){mergedStream.publish(message)});anotherStream.subscribe(function(message){mergedStream.publish(message)});return mergedStream};Constructor.prototype.scan=function(seed,accumulator){var accumulatorStream=new Constructor;var previousMessage=seed;this.subscribe(function(message){previousMessage=accumulator(previousMessage,message);accumulatorStream.publish(previousMessage)});return accumulatorStream};Constructor.prototype.filter=function(filter){var filteredStream=new Constructor;this.subscribe(function(message){if(filter(message)){filteredStream.publish(message)}});return filteredStream};Constructor.prototype.map=function(map){var mapStream=new Constructor;this.subscribe(function(message){mapStream.publish(map(message))});return mapStream};Constructor.prototype.buffer=function(stream){var bufferedStream=new Constructor;var bufferedMessages=[];this.subscribe(function(message){bufferedMessages.push(message)});stream.subscribe(function(){bufferedStream.publish(bufferedMessages.slice());bufferedMessages=[]});return bufferedStream};Constructor.prototype.combine=function(anotherStream,combiner){var combinedStream=new Constructor;var latestMessageOfThis;var latestMessageOfAnother;var hasAnyMessageOfThis=false;var hasAnyMessageOfAnother=false;this.subscribe(function(message){latestMessageOfThis=message;hasAnyMessageOfThis=true;if(hasAnyMessageOfAnother){combinedStream.publish(combiner(latestMessageOfThis,latestMessageOfAnother))}});anotherStream.subscribe(function(message){latestMessageOfAnother=message;hasAnyMessageOfAnother=true;if(hasAnyMessageOfThis){combinedStream.publish(combiner(latestMessageOfThis,latestMessageOfAnother))}});return combinedStream};Constructor.prototype.sampledBy=function(anotherStream,combiner){var sampledStream=new Constructor;var latestMessageOfThis;var hasAnyMessageOfThis=false;this.subscribe(function(message){latestMessageOfThis=message;hasAnyMessageOfThis=true});anotherStream.subscribe(function(message){if(hasAnyMessageOfThis){sampledStream.publish(combiner(latestMessageOfThis,message))}});return sampledStream};Constructor.prototype.flatMap=function(streamCreator){var flattenStream=new Constructor;this.subscribe(function(message){streamCreator(message).subscribe(function(messageOnEachStream){flattenStream.publish(messageOnEachStream)})});return flattenStream};Constructor.prototype.flatMapLatest=function(streamCreator){var flattenStream=new Constructor;var latestStream;this.subscribe(function(message){var currentStream=streamCreator(message);latestStream=currentStream;latestStream.subscribe(function(messageOnEachStream){if(currentStream===latestStream){flattenStream.publish(messageOnEachStream)}})});return flattenStream};Constructor.prototype.bufferWithCount=function(count){return this.windowWithCount(count).throttleWithCount(count)};Constructor.prototype.throttleWithCount=function(count){var index=0;return this.filter(function(message){return index++%count===0})};Constructor.prototype.windowWithCount=function(count){return this.scan([],function(buffer,message){return buffer.concat([message]).slice(-count)}).filter(function(buffer){return buffer.length==count})};Constructor.prototype.throttle=function(ms){var throttledStream=new Constructor;var locked=false;this.subscribe(function(message){if(!locked){locked=true;throttledStream.publish(message);setTimeout(function(){locked=false},ms)}});return throttledStream};Constructor.prototype.debounce=function(ms){var timeoutId;return this.flatMapLatest(function(message){var stream=new Constructor;setTimeout(function(){stream.publish(message)},ms);return stream})};return Constructor}();if(typeof module=="undefined"){global.kamo=kamo}else{module.exports=kamo}})(this);